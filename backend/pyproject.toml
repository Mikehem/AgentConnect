[tool.poetry]
name = "sprintconnect-backend"
version = "0.1.0"
description = "SprintConnect Backend API"
authors = ["SprintConnect Team"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.116.1"
uvicorn = "^0.35.0"
sqlalchemy = "^2.0.43"
alembic = "^1.16.5"
pydantic = "^2.11.7"
redis = "^6.4.0"
celery = "^5.5.3"
psycopg2-binary = "^2.9.10"
python-multipart = "^0.0.20"
python-jose = "^3.5.0"
passlib = "^1.7.4"
bcrypt = "^4.3.0"
PyJWT = "^2.8.0"
httpx = "^0.28.1"
prometheus-client = "^0.22.1"
structlog = "^25.4.0"
python-dotenv = "^1.1.1"
pydantic-settings = "^2.10.1"
logto = "^0.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
black = "^25.1.0"
ruff = "^0.12.11"
mypy = "^1.17.1"
pre-commit = "^4.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "prometheus_client.*",
]
ignore_missing_imports = true
